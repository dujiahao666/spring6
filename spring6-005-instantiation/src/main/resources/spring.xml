<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!-- Spring提供的实例化方法，第一种：在spring配置文件中直接配置类全路径，Spring会自动调用该类的无参数构造方法来实例化Bean   -->
    <bean id="sb" class="com.powernode.spring.bean.SpringBean"></bean>


    <!-- Spring提供的实例化方式，第二种：通过简单工厂模式。你需要在Spring配置文件中告诉Spring框架，调用那个类的那个方法获取Bean   -->
    <!--  factory-method 属性制定的是工厂类当中的静态方法。也就是告诉Spring框架，调用这个方法可以获取Bean  -->
    <bean id="starBean" class="com.powernode.spring.bean.StarFactory" factory-method="get"  />




    <!-- Spring提供的实例化方式，第三种：通过工厂方法模式。通过 factory-bean属性 + factory-method属性来共同完成。   -->
    <!-- 告诉Spring框架，调用哪个对象的那个方法来获取Bean。   -->
    <bean id="gunFactory" class="com.powernode.spring.bean.GunFactory"/>
    <!-- 以下的配置很关键，factory-bean属性告诉Spring调用哪个对象。factory-method告诉Spring调用该对象的的哪个方法。   -->
    <bean id="gun" factory-bean="gunFactory" factory-method="get22"/>


    <!-- Spring提供的实例化方式，第四种：通过FactoryBean接口来实现【这个接口是Spring框架自己定义的】。   -->
    <!-- 这种方式实际上就是第三种方式的简化。   -->
    <!-- 由于你编写的类实现了FactoryBean接口，所以这个类是一个特殊的类，不需要你在手动指定：factory-bean、factory-method   -->
    <!-- 通过一个特殊的Bean：工厂Bean。来返回一个普通的Bean Person对象。   -->
    <!-- 通过Factory这个工厂Bean主要是想对普通的Bean进行加工处理。   -->
    <bean id="person" class="com.powernode.spring.bean.PersonFactoryBean"/>








<!--                -->
    <bean id="stu" class="com.powernode.spring.bean.Student">
        <property name="birth" value="Mon Oct 10 14:30:26 CST 2022"/>
    </bean>

    <!-- 这种方式只能获取当前系统时间，这种时间不能作为生日。   -->
    <bean id="nowTime" class="java.util.Date"/>







    <!--通过工厂Bean: DateFactoryBean 来返回普通Bean:java.util.Date -->
    <bean id="date"  class="com.powernode.spring.bean.DateFactoryBean">
        <constructor-arg index="0" value="1980-10-11"/>
    </bean>

    <bean id="stu2" class="com.powernode.spring.bean.Student">
        <property name="birth" ref="date"/>
    </bean>


    <bean id="ce" class="com.powernode.spring.bean.Ce" init-method="inintme" destroy-method="destoryme">
        <property name="name" value="嘉嘉"/>
    </bean>

</beans>